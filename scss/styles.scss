// On importe reset et base
@import "reset";
@import "base";
@import "classes";
@import "animations";

.grid-container {
  // on définit le display de notre grid
  display: grid;

  // On trace le grid area de manière automatique
  grid:
  // Correspond aux lignes

    "picture header" auto
    "aside main" 1fr
    "footer footer" auto
    // Correspond aux colonnes largeur
    / 350px auto;
  // min-height: 100vh;
}

header {
  // Définition des composantes du grid area
  grid-area: header;

  // On définit la hauteur de la grille du header
  min-height: 20rem;

  // On utilise un gradient de couleur du bleu vers le blanc
  background: linear-gradient(to right, var(--primary), var(--light));
  padding: 8rem 5rem;
  text-align: center;
  // On cherche à remonter légèrement l'image
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  h1 {
    font-size: 6rem;
    line-height: 8rem;
    font-weight: 700;
    color: white;
    letter-spacing: 3rem;
  }

  p {
    font-size: 2rem;
    letter-spacing: 1rem;
    color: white;
  }

  span {
    // les rotations ne fonctionnent pas sur les éléments de type inline
    // Ca n'a pas fonctionné
    display: inline-block;
    animation: bounce 3s;
    animation-iteration-count: infinite;
  }
}

.picture {
  grid-area: picture;
  padding: 3.5rem;
  margin: 0;
  background: var(--background);
  border-right: 1px solid #ddd;
  img {
    border: 3px solid var(--primary);
    border-radius: 50%;
  }
}

aside {
  grid-area: aside;
  background: var(--background);
  border-right: 1px solid #ddd;
  padding: 5rem;
  min-height: 1500px;
  .block {
    padding: 1rem;
    h3 {
      margin: 0.2rem 0 0.1rem 0;
      font-size: 1.5rem;
      text-decoration: underline;
    }
    p {
      // margin: 0 0 2rem 0;
      font-style: italic;
      span {
        font-weight: 700;
      }
    }
    .bar-skill {
      margin: 2rem 0;
      height: 0.5rem;
      background: var(--hint);
      position: relative;
      .bar-skill-progress {
        position: absolute;
        height: 0.5rem;
        top: 0;
        left: 0;
        width: 85%;
        background: var(--light);
      }
      .bar-skill-dot {
        position: absolute;
        height: 1rem;
        width: 1rem;
        background: var(--dark);
        left: calc(85% - 5px);
        top: -2.5px;
        border-radius: 50%;
        // transform: rotate(45deg);
      }
    }
    .stars-container {
      display: flex;
      color: var(--hint);
      i {
        font-size: 2rem;
        margin: 0 1rem;
      }
    }

    .social-container {
      display: flex;
      justify-content: start;
      align-items: center;
      padding: 1rem 1rem;
      border-radius: 5px;
      transition: all 0.4s;
      &:hover {
        background: #eee;
        i {
          color: var(--primary);
          transform: scale(1.3);
          transition: 0.6s;
        }
      }
      i {
        font-size: 2.2rem;
        flex: 0 0 50px;
        margin-right: 1rem;
      }
    }
  }
}

main {
  grid-area: main;
  // background: purple;
  padding: 5rem;
  h2 {
    margin-bottom: 4rem;
  }
  p {
    letter-spacing: 0.1rem;
    line-height: 3rem;
  }
  // ICIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII
}
footer {
  grid-area: footer;
  display: flex;
  flex-direction: column;
  text-align: center;
  justify-content: center;
  align-items: center;
  color: white;
  padding: 5rem;
  background: var(--text);
  h2 {
    margin-bottom: 3rem;
  }
  form {
    display: flex;
    align-items: center;
    // width: 500px;
    // background: red;
    .prefix {
      background: linear-gradient(to right, var(--dark), var(--light));
      padding: 1rem 2rem;
      color: white;
      font-size: 2rem;
      border-top-left-radius: 5%;
      border-bottom-left-radius: 5%;
    }
    button {
      background: var(--text);
      border: 0;
      cursor: pointer;
      transition: all 0.4s;
      &:hover {
        opacity: 0.5;
      }
      .postfix {
        background: linear-gradient(to right, var(--dark), var(--light));
        padding: 1rem 2rem;
        color: white;
        font-size: 2rem;
        border-top-right-radius: 5%;
        border-bottom-right-radius: 5%;
      }
    }

    input {
      outline: 0;
      border: 0;
      min-width: 400px;
      padding: 1rem 2rem;
      line-height: 2rem;
      &::placeholder {
        color: var(--text);
      }
    }
  }
}

.grid-experience {
  padding-top: 2rem;
  // on définit le display de notre grid
  display: grid;

  // On trace le grid area de manière automatique
  grid:
 // Correspond aux lignes

    "duree titre titre" auto
    "duree contenu logo" auto/140px auto 250px;
}

.duree {
  padding: 0rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-content: center;
  grid-area: duree;
  border-right: 2px solid var(--hint);
  // background: chartreuse;
  font-family: "Bebas Neue", cursive;
}
.titre {
  grid-area: titre;
  // background: rgb(47, 71, 23);
  padding-left: 0.8rem;
  padding-top: 0.4rem;
  // font-family: "Bebas Neue", cursive;
  text-decoration: underline;
}
.contenu {
  grid-area: contenu;
  // font-family: "Bebas Neue", cursive;
  // background: rgb(157, 161, 152);
  ul {
    padding: 0.5rem;

    li {
      padding: 0.3rem;
      // list-style-type: circle;
    }
  }
}

.logo {
  grid-area: logo;
  // background: rgb(80, 121, 31);
  display: flex;
  align-items: center;
  justify-content: center;

  img {
    max-height: 70%;
    max-width: 70%;
    // border-radius: 30%;

    // border-radius: 25%;
  }
}
